/*
 * n01_com.js
 *
 * Copyright (C) 1996-2015 by Ohno Tomoaki. All rights reserved.
 */

var n01_com = (function () {
	var me = {};

	var arrange = [
		[2,'D1','D1','D1'],
		[3,'S1','S1','S1'],
		[4,'D2','D2','D2'],
		[5,'S1','S1','S1'],
		[6,'D3','D3','D3'],
		[6,'S2','D3','D3'],
		[7,'S3','S3','S3'],
		[8,'D4','D4','D4'],
		[9,'S1','S1','S1'],
		[10,'D5','D5','D5',70,1],
		[10,'S2','D5','D5',30,1],
		[10,'D5','D5','D5',80,2],
		[10,'S2','S2','S2',20,2],
		[11,'S3','S3','S3'],
		[12,'D6','D6','D6'],
		[13,'S5','S5','S5'],
		[14,'D7','D7','D7'],
		[14,'S6','D7','D7'],
		[15,'S7','S7','S7'],
		[16,'D8','D8','D8'],
		[17,'S1','S1','S1'],
		[18,'D9','D9','D9'],
		[18,'S10','S10','D9'],
		[18,'S6','S6','D9'],
		[19,'S3','S3','S3'],
		[20,'D10','D10','D10'],
		[21,'S5','S5','S5'],
		[22,'D11','D11','D11'],
		[22,'S6','S6','D11'],
		[23,'S7','S7','S7'],
		[23,'S3','S3','S3 '],
		[24,'D12','D12','D12'],
		[25,'S17','S17','S17'],
		[25,'S9','S9','S9'],
		[26,'D13','D13','D13'],
		[26,'S10','S10','D13'],
		[27,'S19','S19','S19'],
		[27,'S11','S11','S11'],
		[28,'D14','D14','D14'],
		[29,'S13','S13','S13'],
		[30,'D15','D15','D15'],
		[31,'S15','S15','S15'],
		[31,'S7','S7','S7'],
		[32,'D16','D16','D16'],
		[33,'S1','S1','S1'],
		[33,'S17','S17','S17'],
		[34,'D17','D17','D17'],
		[34,'S2','S2','D17'],
		[35,'S3','S3','S3'],
		[35,'S19','S19','S19'],
		[36,'D18','D18','D18'],
		[37,'S5','S5','S5'],
		[38,'D19','D19','D19'],
		[38,'S6','S6','D19'],
		[38,'S10','S10','D19'],
		[39,'S7','S7','S7'],
		[39,'S3','S3','S3'],
		[39,'S19','S19','S19'],
		[40,'D20','D20','D20'],
		[41,'S9','S9','S9'],
		[41,'S1','S1','S1'],
		[42,'S10','S10','S10'],
		[42,'S6','S6','S6'],
		[43,'S3','S3','S3'],
		[43,'S19','S19','S19'],
		[43,'S11','S11','S11'],
		[44,'S12','S12','S12'],
		[44,'S4','S4','S4'],
		[44,'S16','S16','S16'],
		[44,'S8','S8','S8'],
		[45,'S13','S13','S13'],
		[45,'S5','S5','S5'],
		[46,'S6','S6','S6'],
		[46,'S10','S10','S10'],
		[46,'S14','S14','S14'],
		[47,'S7','S7','S7'],
		[47,'S15','S15','S15'],
		[48,'S16','S16','S16'],
		[48,'S8','S8','S8'],
		[49,'S17','S17','S17'],
		[49,'S9','S9','S9'],
		[50,'S18','S18','D25'],
		[50,'S10','S10','D25'],
		[51,'S19','S19','S19'],
		[51,'S11','S11','S11'],
		[52,'S12','S12','S12'],
		[52,'S20','S20','S20'],
		[53,'S13','S13','S13'],
		[53,'S17','S17','S17'],
		[54,'S14','S14','S14'],
		[54,'S18','S18','S18'],
		[55,'S15','S15','S15'],
		[55,'S19','S19','S19'],
		[56,'S16','S16','S16'],
		[56,'S20','S20','S20'],
		[56,'T16','T16','T16'],
		[56,'T8','T8','T8'],
		[57,'S17','S17','S17'],
		[58,'S18','S18','S18'],
		[59,'S19','S19','S19'],
		[60,'S20','S20','S20'],
		[61,'T15','S11','T15'],
		[61,'T19','S11','T19'],
		[61,'S25','S25','S25'],
		[62,'T10','S12','T10'],
		[63,'T17','S13','T17',40],
		[63,'T13','T13','T13',60],
		[64,'T16','S14','T16',90],
		[64,'D16','S14','D16',10],
		[65,'T19','S15','T19',30],
		[65,'T11','T11','T11',30],
		[65,'S25','S25','S25',40],
		[66,'T10','S16','T10',60],
		[66,'T18','S16','T18',40],
		[67,'T17','T17','T17'],
		[68,'T20','T20','T20'],
		[68,'T12','S18','T12'],
		[69,'T19','T19','T19'],
		[69,'T15','S19','T15'],
		[70,'T18','S20','T18'],
		[70,'T10','S20','T10'],
		[71,'T13','T13','T13'],
		[71,'T17','T17','T17'],
		[72,'T12','T12','T12'],
		[72,'T20','T20','T20'],
		[72,'T16','T16','T16'],
		[73,'T19','T19','T19'],
		[74,'T14','T14','T14'],
		[74,'T18','T18','T18'],
		[75,'T17','T17','T17'],
		[75,'S25','S25','S25'],
		[76,'T20','T20','T20'],
		[77,'T19','T19','T19'],
		[77,'T15','T15','T15'],
		[78,'T18','T18','T18'],
		[79,'T13','T13','T13'],
		[79,'T19','T19','T19'],
		[80,'T20','T20','T20',60],
		[80,'T16','T16','T16',30],
		[80,'D20','D20','D20',10],
		[81,'T15','T15','T15',30,2],
		[81,'T19','T19','T19',30,2],
		[81,'D25','T19','T19',10,2],
		[81,'D25','T19','D25',10,2],
		[81,'D25','T15','T15',10,2],
		[81,'D25','T15','D25',10,2],
		[81,'D25','T19','T19',25,1],
		[81,'D25','T19','D25',25,1],
		[81,'D25','T15','T15',25,1],
		[81,'D25','T15','D25',25,1],
		[82,'D25','D25','D25'],
		[82,'T14','T14','T14'],
		[83,'T17','T17','T17',80,2],
		[83,'D25','T17','D25',20,2],
		[83,'T17','T17','T17',50,1],
		[83,'D25','T17','D25',50,1],
		[84,'T20','T20','T20',60,2],
		[84,'D25','T20','T20',20,2],
		[84,'T16','T16','T16',20,2],
		[84,'T20','T20','T20',40,1],
		[84,'D25','T20','T20',40,1],
		[84,'T16','T16','T16',20,1],
		[85,'T15','T15','T15',40,2],
		[85,'T19','T19','T19',40,2],
		[85,'D25','T15','T15',10,2],
		[85,'D25','T19','T19',10,2],
		[85,'T15','T15','T15',25,1],
		[85,'T19','T19','T19',25,1],
		[85,'D25','T15','T15',25,1],
		[85,'D25','T19','T19',25,1],
		[86,'T18','T18','T18',90,0],
		[86,'D25','T18','T18',10,0],
		[87,'T17','T17','T17'],
		[88,'T20','T20','T20',70,0],
		[88,'T16','T16','T16',30,0],
		[89,'T19','T19','T19'],
		[90,'T18','T18','T18',70,2],
		[90,'T20','T18','T18',15,2],
		[90,'D25','D25','D25',15,2],
		[90,'T18','T18','T18',10,1],
		[90,'T20','T18','T18',50,1],
		[90,'D25','D25','D25',40,1],
		[91,'T17','T17','T17',90,2],
		[91,'D25','T17','T17',10,2],
		[91,'T17','T17','T17',60,1],
		[91,'D25','T17','T17',40,1],
		[92,'T20','T20','T20',95,2],
		[92,'D25','T20','T20',5,2],
		[92,'T20','T20','T20',60,1],
		[92,'D25','T20','T20',40,1],
		[93,'T19','T19','T19',95,2],
		[93,'D25','T19','T19',5,2],
		[93,'T19','T19','T19',60,1],
		[93,'D25','T19','T19',40,1],
		[94,'T18','T18','T18',95,2],
		[94,'D25','T18','T18',5,2],
		[94,'T18','T18','T18',60,1],
		[94,'D25','T18','T18',40,1],
		[95,'T19','T19','T19',80,2],
		[95,'D25','T19','T19',10,2],
		[95,'T20','T20','T20',10,2],
		[95,'T19','T19','T19',50,1],
		[95,'D25','T19','T19',40,1],
		[95,'T20','T20','T20',10,1],
		[96,'T20','T20','T20'],
		[97,'T19','T19','T19'],
		[98,'T20','T20','T20'],
		[99,'T19','T19','T19'],
		[99,'T20','T20','T20'],
		[100,'T20','T20','T20'],
		[101,'T20','T17','T20',30,0],
		[101,'T20','T17','T17',20,0],
		[101,'T20','T17','D25',20,0],
		[101,'D25','T17','D25',20,0],
		[101,'T17','T17','T17',5,0],
		[101,'T17','T17','D25',5,0],
		[102,'T20','T20','T20',90,0],
		[102,'T18','T18','T18',10,0],
		[103,'T20','T20','T20',60,0],
		[103,'T19','T19','T19',40,0],
		[104,'T18','T18','T18'],
		[104,'T20','T18','T20'],
		[105,'T19','T19','T19'],
		[105,'T20','T20','T20'],
		[105,'T19','T19','D25'],
		[105,'T20','T20','D25'],
		[106,'T20','T20','T20',80,0],
		[106,'T19','T19','T19',20,0],
		[107,'T19','T19','T19',80,0],
		[107,'T20','T19','T19',20,0],
		[108,'T20','T20','T20'],
		[108,'T19','T19','T19'],
		[108,'T18','T18','T18'],
		[109,'T20','T20','T20'],
		[109,'T19','T19','T19'],
		[110,'T20','T20','T20'],
		[110,'T19','T20','T20'],
		[111,'T20','T20','T20'],
		[111,'T19','T19','T19'],
		[112,'T20','T20','T20'],
		[113,'T20','T20','T20'],
		[113,'T19','T19','T19'],
		[114,'T20','T20','T20'],
		[115,'T20','T20','T20'],
		[115,'T20','T20','D25'],
		[115,'T19','T19','T19'],
		[115,'T19','T19','D25'],
		[115,'D25','D25','D25'],
		[116,'T20','T20','T20'],
		[117,'T20','T20','T20'],
		[118,'T18','T18','T18'],
		[118,'T20','T20','T20'],
		[119,'T19','T19','T19',100,1],
		[119,'T19','T19','T19',90,2],
		[119,'T20','T20','T20',10,2],
		[120,'T20','T20','T20'],
		[121,'T20','T20','T20',40,0],
		[121,'D25','D25','D25',20,0],
		[121,'T17','T17','T20',10,0],
		[121,'T20','T20','D25',20,0],
		[121,'T17','T17','D25',10,0],
		[122,'T18','T20','T20'],
		[123,'T19','T19','T19'],
		[123,'T19','T20','T20'],
		[124,'T20','T20','T20'],
		[125,'T18','T18','T18',10,0],
		[125,'D25','D25','D25',70,0],
		[125,'T20','T20','T20',20,0],
		[126,'T19','T19','T19'],
		[126,'T19','T20','T20'],
		[127,'T20','T20','T20'],
		[128,'T18','T18','T18',60,0],
		[128,'T20','T20','T20',40,0],
		[129,'T19','T19','T19'],
		[129,'T19','T20','T20'],
		[130,'T20','T20','T20'],
		[131,'T20','T20','T20'],
		[132,'T20','T20','T20',20,1],
		[132,'D25','D25','D25',80,1],
		[132,'T20','T20','T20',80,2],
		[132,'D25','D25','D25',20,2],
		[133,'T20','T20','T20',70],
		[133,'T19','T19','T19',30],
		[134,'T20','T20','T20',70],
		[134,'T17','T17','T17',30],
		[135,'T20','T20','T20',20,1],
		[135,'D25','D25','D25',80,1],
		[135,'T20','T20','T20',50,2],
		[135,'D25','D25','D25',50,2],
		[136,'T20','T20','T20'],
		[137,'T20','T20','T20',60,0],
		[137,'T19','T19','T19',30,0],
		[137,'T17','T17','T17',10,0],
		[138,'T20','T20','T20',50,0],
		[138,'T18','T18','T18',25,0],
		[138,'T19','T19','T19',25,0],
		[139,'T20','T20','T20',70,0],
		[139,'T19','T19','T19',30,0],
		[140,'T20','T20','T20'],
		[141,'T20','T20','T20',80,0],
		[141,'T17','T17','T17',20,0],
		[142,'T20','T20','T20'],
		[143,'T20','T20','T20'],
		[144,'T20','T20','T20',80,0],
		[144,'T18','T18','T18',20,0],
		[145,'T20','T20','T20'],
		[145,'T20','T20','D25'],
		[146,'T20','T20','T20',70,0],
		[146,'T19','T19','T19',30,0],
		[147,'T20','T20','T20'],
		[148,'T20','T20','T20'],
		[149,'T20','T20','T19',80,0],
		[149,'T19','T19','T20',20,0],
		[150,'T20','T20','T20',90,0],
		[150,'T19','T19','T19',10,0],
		[151,'T20','T20','T20'],
		[152,'T20','T20','T20'],
		[153,'T20','T20','T20'],
		[154,'T20','T20','T20',90,0],
		[154,'T19','T19','T19',10,0],
		[155,'T20','T20','T20'],
		[156,'T20','T20','T20'],
		[157,'T20','T20','T20',90,0],
		[157,'T19','T19','T19',10,0],
		[158,'T20','T20','T20'],
		[159,'T20','T20','T20'],
		[159,'T19','T19','T19'],
		[160,'T20','T20','T20'],
		[161,'T20','T20','T20'],
		[162,'T20','T20','T20'],
		[163,'T20','T20','T20'],
		[164,'T20','T20','T20'],
		[164,'T19','T19','T19'],
		[165,'T20','T20','T20'],
		[166,'T20','T20','T20'],
		[167,'T20','T20','T20'],
		[168,'T20','T20','T20'],
		[169,'T20','T20','T20'],
		[169,'T20','T20','T19'],
		[170,'T20','T20','T20'],
		[171,'T20','T20','T20'],
		[171,'T20','T20','T19'],
		[172,'T20','T20','T20'],
		[173,'T20','T20','T20'],
		[174,'T20','T20','T20'],
		[175,'T20','T20','T20'],
		[175,'T20','T20','T19'],
		[176,'T20','T20','T20'],
		[177,'T20','T20','T20'],
		[178,'T20','T20','T20'],
		[178,'T20','T20','T18'],
		[179,'T20','T20','T19'],
		[180,'T20','T20','T20'],
		[181,'T20','T20','T20'],
		[182,'T20','T20','T18'],
		[183,'T20','T20','T19'],
		[184,'T20','T20','T20'],
		[185,'T20','T20','T18'],
		[185,'T20','T20','D25'],
		[186,'T20','T20','T19'],
		[187,'T20','T20','T20'],
		[187,'T20','T20','T17'],
		[188,'T20','T20','T18'],
		[189,'T20','T20','T19'],
		[190,'T20','T20','T20'],
		[191,'T20','T20','T20'],
		[192,'T20','T20','D25'],
		[193,'T20','T20','T20'],
		[194,'T20','T20','T20'],
		[195,'T20','T20','D25'],
		[211,'T20','T19','T20'],
		[213,'T20','T18','T20'],
		[214,'T20','T19','T20',80,0],
		[214,'T20','D25','T20',20,0],
		[217,'T20','D25','T20'],
		[220,'T20','D25','T20'],
		[227,'T20','T20','T20'],
		[227,'T20','T20','T19'],
		[233,'T20','T20','T20',80,0],
		[233,'T19','T20','T20',20,0],
		[236,'T19','T20','T20',80,0],
		[236,'D25','T20','T20',20,0],
		[239,'D25','T20','T20'],
		[242,'D25','T20','T20'],
		[245,'D25','T20','T20'],
		[246,'T20','T20','T20',80,0],
		[246,'T19','T19','T20',20,0],
		[284,'T20','T19','T20'],
		[299,'T19','T20','T20'],
		[302,'T18','T20','T20'],
		[303,'T19','T20','T20'],
		[305,'T18','T20','T20'],
		[306,'T19','T20','T20'],
		[308,'T18','T20','T20'],
		[309,'T19','T20','T20']
	];

	var board = [
		[ 0,  0],
		[20, 18],
		[15, 17],
		[17, 19],
		[18, 13],
		[12, 20],
		[13, 10],
		[19, 16],
		[16, 11],
		[14, 12],
		[ 6, 15],
		[ 8, 14],
		[ 9,  5],
		[ 4,  6],
		[11,  9],
		[10,  2],
		[ 7,  8],
		[ 2,  3],
		[ 1,  4],
		[ 3,  7],
		[ 5,  1]
	];
	
	var rate_triple = [1,  5 , 10, 13, 15, 17, 20, 25, 30, 40, 50, 70];
	var rate_double = [10, 15, 20, 23, 25, 27, 30, 35, 40, 50, 60, 70];
	var rate_single = [20, 30, 40, 55, 60, 70, 80, 85, 90, 90, 90, 95];

	me.SEGMENT_SINGLE = 1;
	me.SEGMENT_DOUBLE = 2;
	me.SEGMENT_TRIPLE = 3;

	me.getComThrow = function (left, vsLeft, throwIndex, comLevel) {
		// アレンジ取得
		var arrangeData = me._choiceArrange(left, vsLeft, throwIndex);
		if (arrangeData.aim === 25) {
			// bull
			return me._shootBul(comLevel, arrangeData.segment);
		}
		// Target
		return me._shootTarget(comLevel, arrangeData.aim, arrangeData.segment);
	};

	me._random = function() {
		return Math.floor(Math.random() * 1000);
	};

	me._choiceArrange = function(left, vsLeft, throwIndex) {
		var left_flag = (vsLeft > 170) ? 2 : 1;
		var left_index = [];

		for (var i = 0; i < arrange.length && left_index.length < 1000; i++) {
			if (arrange[i][0] === left &&
				(arrange[i].length < 6 || arrange[i][5] === 0 || arrange[i][5] === left_flag)) {
				if (arrange[i].length < 5 || arrange[i][4] <= 1) {
					left_index.push(i);
				} else {
					// 確率変動のための繰り返し
					for (var j = 0; j < arrange[i][4] && left_index.length < 1000; j++) {
						left_index.push(i);
					}
				}
			}
		}
		if (left_index.length === 0) {
			if (throwIndex > 0 && (me._random() % 100) + 1 <= 10) {
				return {aim: 19, segment: me.SEGMENT_TRIPLE};
			}
			return {aim: 20, segment: me.SEGMENT_TRIPLE};
		}

		var arrangeStr = arrange[left_index[me._random() % left_index.length]][throwIndex + 1];
		var segment;
		if (arrangeStr.indexOf('T') !== -1) {
			segment = me.SEGMENT_TRIPLE;
		} else if (arrangeStr.indexOf('D') !== -1) {
			segment = me.SEGMENT_DOUBLE;
		} else {
			segment = me.SEGMENT_SINGLE;
		}
		var aim = parseInt(arrangeStr.substring(1), 10);
		return {aim: aim, segment: segment};
	};
	
	me._shootBul = function(comLevel, arrangeSegment) {
		var target = 25;
		var segment = me.SEGMENT_SINGLE;
		if ((me._random() % 100) + 1 > rate_double[comLevel - 1]) {
			target = (me._random() % 20) + 1;
		}
		if (target === 25) {
			switch (arrangeSegment) {
			case me.SEGMENT_SINGLE:
				if ((me._random() % 100) + 1 <= rate_double[comLevel - 1]) {
					segment = me.SEGMENT_DOUBLE;
				}
				break;
			case me.SEGMENT_DOUBLE:
				if ((me._random() % 100) + 1 <= rate_triple[comLevel - 1]) {
					segment = me.SEGMENT_DOUBLE;
				}
				break;
			}
		}
		return {target: target, segment: segment};
	};

	me._shootTarget = function(comLevel, arrangeAim, arrangeSegment) {
		var target = 0;
		var segment = me.SEGMENT_SINGLE;

		var i = arrangeAim;
		var j = me._random() % 2;
		var single = rate_single[comLevel - 1];
		do {
			switch (arrangeSegment) {
			case me.SEGMENT_SINGLE:
				if ((me._random() % 100) + 1 <= single) {
					// シングル
					target = i;
					segment = me.SEGMENT_SINGLE;
				} else if ((me._random() % 100) + 1 > single) {
					if ((me._random() % 100) + 1 <= rate_triple[comLevel - 1]) {
						// トリプル
						target = i;
						segment = me.SEGMENT_TRIPLE;
					} else if ((me._random() % 100) + 1 <= rate_double[comLevel - 1]) {
						// ダブル
						target = i;
						segment = me.SEGMENT_DOUBLE;
					} else {
						i = board[i][j];
					}
				} else {
					i = board[i][j];
				}
				break;
			case me.SEGMENT_DOUBLE:
				if ((me._random() % 100) + 1 <= rate_double[comLevel - 1]) {
					// ダブル
					target = i;
					segment = me.SEGMENT_DOUBLE;
				} else if ((me._random() % 100) + 1 <= single) {
					if ((me._random() % 100) + 1 <= 50) {
						// シングル
						target = i;
						segment = me.SEGMENT_SINGLE;
					} else {
						// アウトボード
						return {target: 0, segment: me.SEGMENT_SINGLE};
					}
				} else {
					i = board[i][j];
				}
				break;
			case me.SEGMENT_TRIPLE:
				if ((me._random() % 100) + 1 <= rate_triple[comLevel - 1]) {
					// トリプル
					target = i;
					segment = me.SEGMENT_TRIPLE;
				} else if ((me._random() % 100) + 1 <= single) {
					// シングル
					target = i;
					segment = me.SEGMENT_SINGLE;
				} else {
					i = board[i][j];
				}
				break;
			}
			single += single * 0.3;
		} while (target === 0);

		return {target: target, segment: segment};
	};

	return me;
})();
